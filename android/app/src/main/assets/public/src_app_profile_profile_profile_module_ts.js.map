{"version":3,"file":"src_app_profile_profile_profile_module_ts.js","mappings":"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","sources":["./src/app/profile/edit-pass/edit-pass.component.html","./src/app/profile/profile/profile.page.html","./src/app/profile/edit-pass/edit-pass.component.ts","./src/app/profile/profile/profile-routing.module.ts","./src/app/profile/profile/profile.module.ts","./src/app/profile/profile/profile.page.ts","./src/app/profile/services/users.service.ts"],"sourcesContent":["export default \"<p>\\n  edit-pass works!\\n</p>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>profile</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n</ion-content>\\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController, ToastController } from '@ionic/angular';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-edit-pass',\n  templateUrl: './edit-pass.component.html',\n  styleUrls: ['./edit-pass.component.scss'],\n})\nexport class EditPassComponent {\n  @Input() name: string;\n  password: string;\n  password2: string;\n\n  constructor(\n    public modalCtrl: ModalController,\n    public userServ: UsersService,\n    public toast: ToastController\n  ) {}\n\n  changePass() {\n    if (this.password !== this.password2) {\n      this.showToast(3000, 'Passwords do not match!');\n    }\n    return;\n    this.userServ.changePassword(this.password).subscribe(\n      (ok) => this.modalCtrl.dismiss({ changed: true }),\n      (error) => this.showToast(3000, error)\n    );\n  }\n\n  cancel() {\n    this.modalCtrl.dismiss({ changed: false });\n  }\n\n  async showToast(durationToast: number, messageToast: string) {\n    const toast = await this.toast.create({\n      message: messageToast,\n      duration: durationToast,\n      position: 'middle',\n      color: 'dark',\n    });\n    await toast.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ModalController, ToastController } from '@ionic/angular';\nimport { User } from 'src/app/interfaces/svuser';\nimport { EditPassComponent } from '../edit-pass/edit-pass.component';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n  user: User;\n  constructor(\n    public modalCtrl: ModalController,\n    public usersService: UsersService,\n    public toast: ToastController\n  ) {}\n\n  ngOnInit() {}\n\n  async openChangePass() {\n    const modal = await this.modalCtrl.create({\n      component: EditPassComponent,\n      componentProps: { name: this.user.name },\n    });\n    await modal.present();\n    const result = await modal.onDidDismiss();\n    if (result.data.changed) {\n      this.showToast(3000, 'Password updated successfully!');\n    }\n  }\n\n  async showToast(durationToast: number, messageToast: string) {\n    const toast = await this.toast.create({\n      message: messageToast,\n      duration: durationToast,\n      position: 'middle',\n      color: 'dark',\n    });\n    await toast.present();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  Avatar,\n  AvatarResponse,\n  User,\n  UserResponse,\n} from 'src/app/interfaces/svuser';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  private userURL = 'users';\n  constructor(private readonly http: HttpClient) {}\n\n  getUser(id: string): Observable<User> {\n    return this.http\n      .get<UserResponse>(this.userURL + '/' + id)\n      .pipe(map((response) => response.user));\n  }\n\n  getUserConnected(): Observable<User> {\n    return this.http\n      .get<UserResponse>(this.userURL + '/me')\n      .pipe(map((response) => response.user));\n  }\n\n  putUserEmailName(userEmail: string, userName: string): Observable<void> {\n    const userInfo = {\n      email: userEmail,\n      name: userName,\n    };\n    return this.http.put<void>(this.userURL + '/me', userInfo);\n  }\n\n  changePassword(pass: string): Observable<void> {\n    return this.http.put<void>(this.userURL + '/me/password', {\n      password: pass,\n    });\n  }\n\n  putUserAvatar(image: string): Observable<Avatar> {\n    return this.http\n      .put<AvatarResponse>(this.userURL + '/me/photo', {\n        avatar: image,\n      })\n      .pipe(map((response) => response.avatar));\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}