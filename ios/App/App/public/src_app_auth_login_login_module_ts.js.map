{"version":3,"file":"src_app_auth_login_login_module_ts.js","mappings":"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","sources":["./src/app/auth/login/login.page.html","./src/app/auth/login/login-routing.module.ts","./src/app/auth/login/login.module.ts","./src/app/auth/login/login.page.ts","./src/app/mygeolocation/my-geolocation.service.ts"],"sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button [disabled]=\\\"!logged\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Login</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"loginUser()\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input type=\\\"email\\\" name=\\\"email\\\" inputmode=\\\"email\\\" autocomplete=\\\"on\\\" [(ngModel)]=\\\"user.email\\\" required>\\n        </ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input type=\\\"password\\\" name=\\\"password\\\" autocomplete=\\\"on\\\" [(ngModel)]=\\\"user.password\\\" required>\\n        </ion-input>\\n      </ion-item>\\n    </ion-list>\\n    <p>\\n      <!-- <ion-button ion-button color=\\\"light\\\">Light</ion-button> -->\\n      <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\" [disabled]=\\\"loginForm.invalid\\\">Login</ion-button>\\n    </p>\\n  </form>\\n\\n  <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" routerLink=\\\"/register\\\">Create account</ion-button>\\n\\n  <!-- <mgl-map [style]=\\\"'mapbox://styles/mapbox/streets-v11'\\\" [zoom]=\\\"[14]\\\" [center]=\\\"[lng, lat]\\\">\\n    <mgl-marker #marker [lngLat]=\\\"[lng, lat]\\\"></mgl-marker>\\n    <mgl-popup [marker]=\\\"marker\\\">\\n      You are here\\n    </mgl-popup>\\n  </mgl-map> -->\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    HttpClientModule,\n  ],\n  declarations: [LoginPage],\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserLogin } from 'src/app/interfaces/svuser';\nimport { MyGeolocation } from 'src/app/mygeolocation/my-geolocation.service';\nimport { AuthServicesService } from '../services/auth-services.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  lat = 0;\n  lng = 0;\n  user!: UserLogin;\n  logged = false;\n\n  constructor(\n    private authService: AuthServicesService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.user = {\n      email: '',\n      password: '',\n    };\n    this.logoutUser();\n    this.locateUser();\n    // this.load();\n  }\n\n  // load() {\n  //   this.mapComp.load.subscribe(() => {\n  //     this.mapComp.mapInstance.resize(); // Necessary for full height\n  //   });\n  // }\n\n  // isLogged() {\n  //   this.authService.isLogged().subscribe({\n  //     next: (log) => {\n  //       console.log(log.valueOf());\n  //       this.logged = !log.valueOf();\n  //     },\n  //   });\n  // }\n\n  async locateUser() {\n    const pos = await MyGeolocation.getLocation();\n    this.lng = pos.longitude;\n    this.lat = pos.latitude;\n  }\n\n  logoutUser() {\n    this.authService.logout();\n  }\n\n  loginUser() {\n    this.user.lat = this.lat;\n    this.user.lng = this.lng;\n\n    this.authService.login(this.user).subscribe({\n      next: (us) => {\n        let isLoged = false;\n        this.authService.loginChange$.forEach((e) => {\n          isLoged = e;\n        });\n\n        if (isLoged) {\n          this.router.navigate(['/events']);\n        }\n      },\n      error: (error) => console.log('error: ' + error),\n    });\n  }\n\n  validateClasses(ngModel: NgModel, validClass: string, errorClass: string) {\n    return {\n      [validClass]: ngModel.touched && ngModel.valid,\n      [errorClass]: ngModel.touched && ngModel.invalid,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyGeolocation {\n  static getLocation(): Promise<GeolocationCoordinates> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        (pos) => {\n          resolve(pos.coords);\n        },\n        (error) => {\n          switch (error.code) {\n            case error.PERMISSION_DENIED: // User didn't allow the web page to retrieve location\n              reject('User denied the request for Geolocation.');\n              break;\n            case error.POSITION_UNAVAILABLE: // Couldn't get the location\n              reject('Location information is unavailable.');\n              break;\n            case error.TIMEOUT: // The maximum amount of time to get location information has passed\n              reject('The request to get user location timed out.');\n              break;\n            default:\n              reject('An unknown error occurred.');\n              break;\n          }\n        }\n      );\n    });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}